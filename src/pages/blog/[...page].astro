---
import { getCollection } from "astro:content";
import config from '../../config.mjs';


import Base from "../../layouts/Base.astro";
import Post from "../../components/blog/Post.astro";

export async function getStaticPaths({paginate}) {
    const blogEntries = (await getCollection('blog', ({ data }) => {
        return true;
    })).sort(
        (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
    );

    return paginate(blogEntries, { pageSize: config.postsPerPage });
}

const { page } = Astro.props;

const tagClass = 'cursor-pointer text-[16px] border-pacamara-secondary border-[1px] leading-none rounded-full py-3 px-5 text-pacamara-secondary hover:bg-pacamara-accent hover:border-pacamara-accent hover:text-pacamara-white transition-all duration-300';
const tags = ['react', 'css', 'other'];
---
<Base>
    <script>
        function handleFilterPost() {
            document.addEventListener('DOMContentLoaded', () => {
            filterPost();
            toggleTagBtnClass()
        })
        
        function filterPost() {
            const urlParams = new URLSearchParams(location.search);
            const q = urlParams.get('q');
            const posts = document.querySelectorAll(`[data-tag]`);

            if (q) {
                posts.forEach(v => {
                    if (v.dataset.tag === q) {
                            v.style.display = 'block';
                        } else {
                            v.style.display = 'none';
                        }
                    })
                } else {
                    posts.forEach(v => {
                        v.style.display = 'block';
                    })
                }
            }

            function toggleTagBtnClass() {
                const urlParams = new URLSearchParams(location.search);
                const q = urlParams.get('q');
                const tagBtns = document.querySelectorAll('[data-tagbtn]');
                const activeClass = ['border-pacamara-accent', 'text-pacamara-white', 'bg-pacamara-accent'];
                tagBtns.forEach(d => {
                    if (d.dataset.tagbtn === q) {
                        d.classList.add(...activeClass);
                    } else {
                        d.classList.remove(...activeClass);
                    }
                })
            }
            
            function createBrowserHistory() {
                const listeners = [];
                const notifyListeners = () => {
                    listeners.forEach(listen => {
                        listen();
                    })
                }

                window.onpopstate = () => {
                    notifyListeners();
                }

                return {
                    lisen: (listener) => {
                        listeners.push(listener);
                    },
                    push: (path) => {
                        history.pushState({}, '', path);
                        notifyListeners();
                    }
                }
            }

            const browserHistory = createBrowserHistory();

            browserHistory.lisen(() => {
                filterPost();
                toggleTagBtnClass()
            }); 

            document.getElementById('tags')?.addEventListener('click', e => {
                const urlParams = new URLSearchParams(location.search);
                const q = urlParams.get('q');
                if (e.target.textContent === q) {
                    browserHistory.push(location.pathname);
                } else {
                    browserHistory.push(`${location.pathname}?q=${e.target.textContent}`);
                }
            });
        }
        handleFilterPost();
        document.addEventListener('astro:after-swap', handleFilterPost);
    </script>
    <div class="container mx-auto max-w-screen-lg px-7 dark:text-white">
        <div class="dark:text-white mb-5">按文章分类搜索</div>
        <div class="flex flex-wrap gap-5" id="tags">
            {tags.map(v => {
                return (
                    <div data-tagbtn={v} class={tagClass}>{v}</div>
                )
            })}
        </div>
    </div>
    <section class="container mx-auto max-w-screen-lg px-7 py-10">
        {   
            page.data.map((post, index) => {
                return <Post postData={post} num={index} />;
            })
        }
        <div class="flex flex-row justify-center gap-7">
            {page.url.prev ? <a href={page.url.prev} class={tagClass}>Previous</a> : null}
            {page.url.next ? <a href={page.url.next} class={tagClass}>Next</a> : null}
        </div>
        
    </section>

    
</Base>